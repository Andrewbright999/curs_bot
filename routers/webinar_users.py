from aiogram import  Router, F
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message, CallbackQuery

from users import user_list
from config import ADMIN_LIST
from buttons.inline_buttons import get_callback_buttons, buttons_list



router = Router()


class ChickIn(StatesGroup):
    name_get = State()
    webinar_check_in = State()
    stream_pool = State()

@router.message(Command("start")) 
async def cmd_start(message: Message, state: FSMContext):
    user_list.check_user(message.from_user.id)
    await message.answer("""<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –í–∞—Å –≤ –≥—Ä—É–ø–ø–µ!</b>
<i>–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.</i>
<b>–ö–∞–∫ –í–∞—Å –∑–æ–≤—É—Ç?</b>
                         
–≠—Ç–æ—Ç —á–∞—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –≤—Å–µ—Ö –µ–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ –Ω–∞—à–∏—Ö –≤—Å—Ç—Ä–µ—á–∞—Ö, –Ω–æ–≤–æ—Å—Ç—è—Ö, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞.

–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –¥–æ–≤–µ—Ä–∏–µ!

<i>–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.</i>
<b>–ö–∞–∫ –í–∞—Å –∑–æ–≤—É—Ç?</b>""")
    for admin in ADMIN_LIST:
        await message.forward(chat_id=admin)   
    await state.set_state(ChickIn.name_get)


    
@router.message(ChickIn.name_get)
async def message_with_text(message: Message, state: FSMContext):
    user_list.check_user(message.from_user.id)
    check_in_btn = buttons_list(["–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –≤–µ–±–∏–Ω–∞—Ä‚úÖ"], "webinar_check_in_")
    markup = get_callback_buttons(check_in_btn)
    await message.answer(text="""–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è –∏ –±–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å –∫ –º–æ–µ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏!
                         
<b>–ü—Ä–∏–≥–ª–∞—à–∞—é –í–∞—Å –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≤–µ–±–∏–Ω–∞—Ä</b>
–û–Ω –ø—Ä–æ–π–¥–µ—Ç –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ ZOOM –≤ 19:00 –ø–æ –ú–æ—Å–∫–≤–µ. –ù–∞ –Ω–µ–º —è —Ä–∞—Å—Å–∫–∞–∂—É –≤—Å–µ –æ —Å–æ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, –∫–æ–Ω—Ç—Ä–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, –∏—Ö –æ–±—â–∏—Ö —á–µ—Ä—Ç–∞—Ö –∏ –æ—Ç–ª–∏—á–∏—è—Ö. –ê —Ç–∞–∫–∂–µ –∫–∞–∫ –∏–∑ –≤—Å–µ–≥–æ —ç—Ç–æ–≥–æ –≤—ã–±–∏—Ä–∞—Ç—å—Å—è.
–Ø –æ—Ç–≤–µ—á—É –Ω–∞ –≤—Å–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã! –í–∞—Å –∂–¥–µ—Ç –ø—Ä–∏—è—Ç–Ω—ã–π –±–æ–Ω—É—Å –∏ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å!

–° –Ω–µ—Ç–µ—Ä–ø–µ–Ω–∏–µ–º –∂–¥—É –≤—Å—Ç—Ä–µ—á–∏!""",reply_markup=markup)
    await state.set_state(ChickIn.webinar_check_in)
    for admin in ADMIN_LIST:
        await message.bot.send_message(chat_id=admin, text=f"–§–ò–û @{message.from_user.username}:")
        await message.forward(chat_id=admin)    
    
@router.callback_query(ChickIn.webinar_check_in) 
async def webinar_check_in(callback: CallbackQuery, state: FSMContext):
    print(callback.data)
    for admin in ADMIN_LIST:
        await callback.bot.send_message(chat_id=admin, text=f"@{callback.from_user.username} –∑–∞–ø–∏—Å–∞–ª—Å—è –Ω–∞ –≤–µ–±–∏–Ω–∞—Ä")
    sream_btn = buttons_list(["–•–æ—á—É —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å‚úÖ","–ü–æ–∫–∞ –¥—É–º–∞—é‚è≥"], "stream_poll_")
    markup = get_callback_buttons(sream_btn)
    await state.set_state(ChickIn.stream_pool)
    await callback.message.edit_text("""<b>–í—ã –∑–∞–ø–∏—Å–∞–ª–∏—Å—å, –Ω–∞ –≤–µ–±–∏–Ω–∞—Ä‚úÖ</b>
                                     
–í–∞–º –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–∏–¥–µ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–µ–±–∏–Ω–∞—Ä –≤ zoom

–•–æ—Ç–∏–º —Å–æ–æ–±—â–∏—Ç—å, —á—Ç–æ —É –Ω–∞—Å —Å–∫–æ—Ä–æ –∑–∞–ø—É—Å–∫ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–æ–π –≥—Ä—É–ø–ø—ã, —Ö–æ—Ç–∏—Ç–µ –ª–∏ –≤—ã –ø–æ—É—á–∞–≤—Å—Ç–≤–æ–≤–∞—Ç—å?""")
    await callback.message.edit_reply_markup(reply_markup=markup)
    # await callback.answer(f"""<a href='https://us06web.zoom.us/j/87056225147?pwd=bmbcZFjS3bScJeTgljz6pdtG1mHZrZ.1'>–í–æ—Ç –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –≤—Ö–æ–¥–∞ –Ω–∞ –≤–µ–±–∏–Ω–∞—Ä:</a>""")


@router.callback_query(ChickIn.stream_pool) 
async def webinar_check_in(callback: CallbackQuery, state: FSMContext):
    answer = callback.data.split("_")[-1]
    await state.clear()
    if answer == "–•–æ—á—É —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å‚úÖ":
        for admin in ADMIN_LIST:
            await callback.bot.send_message(chat_id=admin, text=f"@{callback.from_user.username} —Ö–æ—á–µ—Ç‚úÖ –ø–æ—É—á–∞–≤—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –ø–æ—Ç–æ–∫–µ")
        await callback.message.edit_text("""–û—Ç–ª–∏—á–Ω–æ!
–î–æ –≤—Å—Ç—Ä–µ—á–∏! –û–∂–∏–¥–∞–π—Ç–µ —Å—Å—ã–ª–∫—É""")
        await callback.message.delete_reply_markup()
        await state.clear()
    elif answer == "–ü–æ–∫–∞ –¥—É–º–∞—é‚è≥":
        for admin in ADMIN_LIST:
            await callback.bot.send_message(chat_id=admin, text=f"@{callback.from_user.username} –ø–æ–∫–∞ –¥—É–º–∞–µ—Ç‚è≥")
        wait_btn = buttons_list(["–•–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø–æ—Ç–æ–∫üñê"], "stream_poll_")
        markup = get_callback_buttons(wait_btn)
        await callback.message.edit_text("""–•–æ—Ä–æ—à–æ, –¥–ª—è –≤–∞—Å –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å <b>15%</b>, –¥–æ 5 —Å–µ–Ω—Ç—è–±—Ä—è""")
        await callback.message.edit_reply_markup(reply_markup=markup)
        
        
@router.callback_query() 
async def webinar_check_in(callback: CallbackQuery):
    answer = callback.data.split("_")[-1]
    if answer == "–•–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø–æ—Ç–æ–∫üñê":
        for admin in ADMIN_LIST:
            await callback.bot.send_message(chat_id=admin, text=f"@{callback.from_user.username} –ø–æ–¥—É–º–∞–ª –∏ —Ä–µ—à–∏–ª –ø–æ—É—á–∞–≤—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –ø–æ—Ç–æ–∫–µ")
        await callback.message.edit_text("""–û—Ç–ª–∏—á–Ω–æ, –≤—ã –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –ø–æ—Ç–æ–∫ —Å–æ —Å–∫–∏–¥–∫–æ–π 15%""")
        await callback.message.delete_reply_markup()


@router.message(F.text)
async def message_with_text(message: Message):
    print(message.from_user.id)
    user_list.check_user(message.from_user.id)
    for admin in ADMIN_LIST:
        await message.bot.send_message(chat_id=admin, text=f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{message.from_user.username}:")
        await message.forward(chat_id=admin)
        